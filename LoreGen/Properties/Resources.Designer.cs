//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoreGen.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LoreGen.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1
        ///1,6,2,2,4,3
        ///1,6,2,2,5,3,7,1
        ///2
        ///1,6,2,3,4,2
        ///1,2,2,3,3,6,4,2,5,2,6,1,7,2,8,2,9,1,10,4
        ///3
        ///1,6,2,3,4,3
        ///1,1,2,2,3,4,4,6,5,2,6,1,7,2,8,2,9,2,10,4
        ///4
        ///1,6,2,2,4,3
        ///1,2,2,4,3,6,4,4,5,2,6,1,7,3,8,2,9,1,10,3
        ///5
        ///1,5,2,2,4,5,5,1,6,1
        ///1,6,2,3,5,4,7,4,8,2,9,1,10,2
        ///6
        ///1,4,2,5,4,3,5,1
        ///1,6,2,3,3,1,5,2,6,3,7,4,8,3,9,1
        ///7
        ///1,5,2,4,4,4
        ///1,3,2,4,3,6,4,4,5,2,6,2,7,3,8,1,9,3,10,4
        ///8
        ///1,5,2,5,4,5
        ///1,2,2,5,3,6,4,3,5,1,6,1,7,3,8,1,9,2,10,3
        ///9
        ///1,5,2,4,4,4
        ///1,2,2,4,3,5,4,6,5,1,6,1,7,2,8,3,9,4,10,6
        ///10
        ///1,4,2,5,4,4,5,2,6,3        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BiomePatterns {
            get {
                return ResourceManager.GetString("BiomePatterns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1,001000,Polar Desert,Polar Desert
        ///2,013000,Glacier,Glacier
        ///3,014000,Glacial Mountain,Glacial Mountain
        ///4,043000,Blizzard Cliffs,Blizzard Cliffs
        ///5,101101,Barren Icelands,Barren Icelands
        ///6,112102,Boreal Plains,Boreal Plains
        ///7,113101,Tundra,Tundra
        ///8,113100,Snow Cliffs,Snow Cliffs
        ///9,114101,Alpine Tundra,Alpine Tundra
        ///10,121102,Montane Shrubland,Montane Shrubland
        ///11,122102,Taiga,Taiga
        ///12,122112,Boreal Forest,Boreal Forest
        ///13,132101,Snowlands,Snowlands
        ///14,202101,Wastelands,Wastelands
        ///15,203101,Barre [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Biomes {
            get {
                return ResourceManager.GetString("Biomes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1,1,1,Ice,A cold terrain with sparse life
        ///2,1,2,Frosty,A cold-to-temperate terrain with sparse-to-moderate life
        ///3,1,4,Permafrost,A cold-to-temperate terrain with sparse life
        ///4,2,1,Snowy,A temperate-to-cold terrain with moderate-to-sparse life
        ///5,2,2,Grassy,A temperate terrain with moderate life
        ///6,2,3,Meadow,A temperate-to-warm terrain with moderate-to-dense life
        ///7,2,4,Wasting,A temperate terrain with moderate-to-sparse life
        ///8,2,5,Dusty,A temperate-to-warm terrain with moderate-to-sparse life
        ///9,2,6,Pa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Climates {
            get {
                return ResourceManager.GetString("Climates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ice,1,White,Cold with sparse life
        ///Grassy,2,GreenYellow,Moderate with moderate life
        ///Lush,3,DarkGreen,Warm with dense life
        ///Barren,4,SaddleBrown,Moderate with sparse life
        ///Sandy,5,Tan,Warm with sparse life
        ///Savannah,6,Gold,Warm with moderate life
        ///Arid,7,Red,Hot with sparse life
        ///.
        /// </summary>
        internal static string ClimateTypes {
            get {
                return ResourceManager.GetString("ClimateTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 10,Yes,,,,,,,,
        ///4,N,S,E,W,,,,,
        ///O,O,O,O,O,O,O,O,O,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,X,X,X,X,X,X,X,X,O
        ///O,O,O,O,O,O,O,O,O,O
        ///10,Yes,,,,,,,,
        ///4,N,S,E,W,,,,,
        ///.,.,.,.,.,.,.,.,.,.
        ///.,.,.,.,O,O,.,.,.,.
        ///.,.,.,O,X,X,O,.,.,.
        ///.,.,O,X,X,X,X,O,.,.
        ///.,O,X,X,X,X,X,X,O,.
        ///.,O,X,X,X,X,X,X,O,.
        ///.,.,O,X,X,X,X,O,.,.
        ///.,.,.,O,X,X,O,.,.,.
        ///.,.,.,.,O,O,.,.,.,.
        ///.,.,.,.,.,.,.,.,.,.
        ///10,Yes,,,,,,,,
        ///4,N,S,E,W,,, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EdgePatterns {
            get {
                return ResourceManager.GetString("EdgePatterns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Probability long rime is allowed,0
        ///Min long rime probability,0.1
        ///Max long rime probability,0.3
        ///Long rime probability skew,0.1
        ///Probability complex pre-onset is allowed,0.6
        ///Min complex pre-onset probability,0.1
        ///Max complex pre-onset probability,0.3
        ///Complex pre-onset probability skew,0.1
        ///Probability complex post-onset is allowed,0.6
        ///Min complex post-onset probability,0.1
        ///Max complex post-onset probability,0.3
        ///Complex post-onset probability skew,0.1
        ///Probability coda is allowed,0.8
        ///Min coda probabil [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LanguageRules {
            get {
                return ResourceManager.GetString("LanguageRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 0 0 0 4 m mh ḿ ӎ
        ///2 0 0 0 2 m mm  
        ///3 0 0 0 2 p pp  
        ///4 0 0 0 2 b bb  
        ///5 0 0 0 3 m n μ 
        ///6 0 0 0 3 f ph th 
        ///7 0 0 0 1 v   
        ///8 0 0 0 3 n nn н 
        ///9 0 0 0 4 t tt th т
        ///10 0 0 0 3 d dh д 
        ///11 0 1 0 3 s ss z 
        ///12 0 1 0 3 z ss з 
        ///13 0 0 0 4 th z thth ŧ
        ///14 0 0 0 2 th dh  
        ///15 0 0 0 1 n   
        ///16 0 0 0 1 t   
        ///17 0 0 0 2 d dd  
        ///18 0 1 0 1 s   
        ///19 0 0 0 1 z   
        ///20 0 0 1 1 r   
        ///21 0 0 1 2 r tt  
        ///22 0 0 1 3 r rr ŕ 
        ///23 0 0 1 1 l   
        ///24 0 0 0 3 sh sc x 
        ///25 0 1 0 4 zh j zs ж
        ///26 0 1 0 2 s sz  
        ///27 0 1 1 3 z rr ž  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LetterSounds {
            get {
                return ResourceManager.GetString("LetterSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to English,2,3,4,6,7,13,14,15,16,17,18,19,20,23,24,25,28,34,36,37,38,39,42,47,48,49,51,54,55,56,57,60,62,63,64,65,69,,
        ///Chinese,2,3,6,15,16,18,23,29,34,37,39,44,45,46,49,50,51,52,53,54,60,67,,
        ///Russian,2,3,4,6,7,8,9,10,11,12,22,23,26,27,29,30,34,37,38,39,40,44,45,51,53,54,59,61,68,,
        ///Swahili,1,2,3,4,5,6,7,13,14,15,16,17,18,19,22,23,24,31,34,37,38,40,42,43,47,48,49,51,54,62,64,67,,
        ///Hawaiian,2,3,7,15,16,23,33,37,41,42,47,48,49,51,54,57,58,62,66,67,,
        ///Tagalog,2,3,4,15,16,17,18,21,23,24,31,34,36,37,38,41,42,49,51 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PhoneticInventories {
            get {
                return ResourceManager.GetString("PhoneticInventories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last updated: 4/9/16
        ///
        ///WorldRules.csv
        ///
        ///This file contains the probabilities used when generating the layout of a world. Values must remain in order. All values read from the second column.
        ///Format for each row:
        ///Description of value [,]
        ///Value
        ///
        ///LetterSounds.txt
        ///
        ///This file contains the letter sounds used when assembling languages. It is a unicode TXT, not a CSV, because the latter does not play nice with unicode.
        ///Format for each line:
        ///ID number [space]
        ///1/0 is a vowel [space]
        ///1/0 is an S/Z consonan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string README {
            get {
                return ResourceManager.GetString("README", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjustment when combining climate type weights (larger number means combinations are less likely -- range of 3 to 6 recommended),4.5.
        /// </summary>
        internal static string TerrainRules {
            get {
                return ResourceManager.GetString("TerrainRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1,1,1,Glacial Ice
        ///2,1,2,Icy Hills
        ///3,1,3,Icy Cliffs
        ///4,1,4,Icy Peaks
        ///5,1,5,Iceberg
        ///6,2,1,Frosty Flats
        ///7,2,2,Frosty Hills
        ///8,2,3,Frosty Cliffs
        ///9,2,4,Frosty Peaks
        ///10,2,5,Frosty Marsh
        ///11,2,6,Frosty Pond
        ///12,2,7,Frosty Thickets
        ///13,2,8,Frosty Woodland
        ///14,2,9,Frosty Forest
        ///15,2,10,Frosty Wooded Slopes
        ///16,3,1,Permafrost
        ///17,3,2,Permafrost Hills
        ///18,3,3,Permafrost Cliffs
        ///19,3,4,Permafrost Peaks
        ///20,4,1,Snowy Flats
        ///21,4,2,Snowy Hills
        ///22,4,3,Snowy Cliffs
        ///23,4,4,Snowy Peaks
        ///24,4,5,Snowy Marsh
        ///25,4,6,S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Terrains {
            get {
                return ResourceManager.GetString("Terrains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flats,1,Flat terrain populated by grasses
        ///Hills,2,Slightly sloped terrain
        ///Cliffs,3,Jagged sloped terrain reaching medium elevation
        ///Peaks,4,Sloped terrain with reaching high elevation
        ///Marsh,5,Flat lowland terrain with wet or submerged ground
        ///Pond,6,Flat terrain with many small and medium water bodies
        ///Thickets,7,Flat terrain populated by shrubs and ferns
        ///Woodland,8,Mostly flat terrain with trees
        ///Forest,9,Mostly flat terrain very dense with trees
        ///Wooded Slopes,10,Sloped terrain with trees.
        /// </summary>
        internal static string TerrainTypes {
            get {
                return ResourceManager.GetString("TerrainTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of continents (min),1
        ///Number of continents (max),9
        ///World length (x 100m) (mean),400000
        ///World length (x 100m) (stddev),50000
        ///World length (x 100m) (min),100000
        ///World length (x 100m) (max),700000
        ///World map height/length ratio,0.75
        ///Split block percentage minimum percentage of parent block,0.25
        ///Global number of regions (mean),40
        ///Global number of regions (std dev),5
        ///Global number of regions (min),25
        ///Global number of regions (max),55
        ///Number of blocks per section in a large zoom,10000
        ///Number of [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WorldRules {
            get {
                return ResourceManager.GetString("WorldRules", resourceCulture);
            }
        }
    }
}
